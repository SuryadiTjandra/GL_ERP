buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	 id "com.moowork.node" version "1.2.0"
	 id "com.ewerk.gradle.plugins.querydsl" version "1.0.9"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ags'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	//compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	//compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-devtools")
	//compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.9.0")
	compile "com.querydsl:querydsl-jpa:4.1.2"
	runtime('com.microsoft.sqlserver:mssql-jdbc')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')
}

node {
	download = false
	nodeModulesDir = file("${project.projectDir}/src/main/front")
	npmWorkDir = file("${project.projectDir}/src/main/front")
}

querydsl {
	jpa = true
}

task runWebpack(type:NpmTask, dependsOn: npmInstall){
	args = ['run', 'build']
}

task webpack(type:Copy, dependsOn: runWebpack){
	from 'src/main/front/dist'
	into 'src/main/resources/static/js'
}