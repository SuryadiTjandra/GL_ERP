/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	 id "com.moowork.node" version "1.2.0"
	 id "com.ewerk.gradle.plugins.querydsl" version "1.0.9"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ags.goldenlionerp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

bootJar{ enabled = false }
jar { enabled = true }

dependencies {
	implementation "ags.goldenlionerp:GoldenLionERP_CoreModule"

	//compile only because these are supposed to be included by the CoreModule
    compileOnly('org.springframework.boot:spring-boot-starter-data-jpa')
	compileOnly('org.springframework.boot:spring-boot-starter-data-rest')
	compileOnly('org.springframework.boot:spring-boot-starter-security')
	compileOnly('org.springframework.boot:spring-boot-starter-thymeleaf')
	compileOnly "com.querydsl:querydsl-jpa:4.1.2"

	runtimeOnly('com.microsoft.sqlserver:mssql-jdbc')

    implementation 'com.google.guava:guava:23.0'
    
	testImplementation "ags.goldenlionerp:GoldenLionERP_CoreTestModule"
    testCompileOnly 'junit:junit:4.12'
    testCompileOnly 'org.springframework.boot:spring-boot-starter-test'
}

node {
	download = false
	nodeModulesDir = file("${project.projectDir}/src/main/front")
	npmWorkDir = file("${project.projectDir}/src/main/front")
}

querydsl {
	jpa = true
}

task cleanJsFiles(type:Delete){
	delete "src/main/front/dist"
	delete "src/main/resources/static/js"
}
task runWebpack(type:NpmTask, dependsOn: npmInstall){
	args = ['run', 'build']
}
task moveBundledJsFiles(type:Copy, dependsOn: [cleanJsFiles,runWebpack]){
	from 'src/main/front/dist'
	into 'src/main/resources/static/js'
}
task webpack(dependsOn: [moveBundledJsFiles]){

}

build.dependsOn webpack
