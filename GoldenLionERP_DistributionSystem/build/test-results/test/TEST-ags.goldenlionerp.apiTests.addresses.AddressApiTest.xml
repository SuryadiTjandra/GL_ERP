<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ags.goldenlionerp.apiTests.addresses.AddressApiTest" tests="7" skipped="0" failures="0" errors="0" timestamp="2018-12-27T04:25:40" hostname="LAPTOP-FHFRCCL6" time="0.687">
  <properties/>
  <testcase name="updateTestWithPatch" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.223"/>
  <testcase name="deleteTest" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.056"/>
  <testcase name="updateTestWithPut" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.026"/>
  <testcase name="getTestSingle" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.031"/>
  <testcase name="getTestCollection" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.183"/>
  <testcase name="createTestWithPut" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.024"/>
  <testcase name="createTestWithPost" classname="ags.goldenlionerp.apiTests.addresses.AddressApiTest" time="0.14"/>
  <system-out><![CDATA[2018-12-27 11:25:40.203  INFO 2120 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [ags.goldenlionerp.apiTests.addresses.AddressApiTest], using SpringBootContextLoader
2018-12-27 11:25:40.205  INFO 2120 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [ags.goldenlionerp.apiTests.addresses.AddressApiTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2018-12-27 11:25:40.205  INFO 2120 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [ags.goldenlionerp.apiTests.addresses.AddressApiTest]: AddressApiTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2018-12-27 11:25:40.208  INFO 2120 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration ags.goldenlionerp.GoldenLionErpApplication for test class ags.goldenlionerp.apiTests.addresses.AddressApiTest
2018-12-27 11:25:40.210  INFO 2120 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2018-12-27 11:25:40.211  INFO 2120 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5835057c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@385ff2a1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@45235eaf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7c433c58, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c2dd849, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4ba0f997, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@14a9106a, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@71ed4f5b, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@13e02ebf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5f400115, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@33670d7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@183a607d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@abd2013, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@552ac0f8]
2018-12-27 11:25:40.230  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@106e18d6, testMethod = updateTestWithPatch@AddressApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.231  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.231  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.237  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 6 ms
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select effectivea0_.eaanum as eaanum1_19_0_, effectivea0_.earecid as earecid2_19_0_, effectivea0_.eacid as eacid3_19_0_, effectivea0_.eadtin as eadtin4_19_0_, effectivea0_.eatmin as eatmin5_19_0_, effectivea0_.eauid as eauid6_19_0_, effectivea0_.eadtlu as eadtlu7_19_0_, effectivea0_.eatmlu as eatmlu8_19_0_, effectivea0_.eauidm as eauidm9_19_0_, effectivea0_.eadtls as eadtls10_19_0_, effectivea0_.eaaddr1 as eaaddr11_19_0_, effectivea0_.eaaddr2 as eaaddr12_19_0_, effectivea0_.eaaddr3 as eaaddr13_19_0_, effectivea0_.eaaddr4 as eaaddr14_19_0_, effectivea0_.eacity as eacity15_19_0_, effectivea0_.eacntry as eacntry16_19_0_, effectivea0_.eacnty as eacnty17_19_0_, effectivea0_.eaefdt as eaefdt18_19_0_, effectivea0_.eaemail as eaemail19_19_0_, effectivea0_.eanau as eanau20_19_0_, effectivea0_.eanou as eanou21_19_0_, effectivea0_.eapoldis as eapoldi22_19_0_, effectivea0_.eapscd as eapscd23_19_0_, effectivea0_.eastate as eastate24_19_0_, effectivea0_.easubdis as easubdi25_19_0_ from t0104 effectivea0_ where effectivea0_.eaanum=? and effectivea0_.earecid=?
Hibernate: select contacts0_.cianum as cianum1_17_0_, contacts0_.ciseq1 as ciseq2_17_0_, contacts0_.cianum as cianum1_17_1_, contacts0_.ciseq1 as ciseq2_17_1_, contacts0_.cicid as cicid3_17_1_, contacts0_.cidtin as cidtin4_17_1_, contacts0_.citmin as citmin5_17_1_, contacts0_.ciuid as ciuid6_17_1_, contacts0_.cidtlu as cidtlu7_17_1_, contacts0_.citmlu as citmlu8_17_1_, contacts0_.ciuidm as ciuidm9_17_1_, contacts0_.cidtls as cidtls10_17_1_, contacts0_.cidob as cidob11_17_1_, contacts0_.cidesb1 as cidesb12_17_1_, contacts0_.cifsnm as cifsnm13_17_1_, contacts0_.cigdr as cigdr14_17_1_, contacts0_.cilsnm as cilsnm15_17_1_, contacts0_.cimlnm as cimlnm16_17_1_, contacts0_.cimoref as cimoref17_17_1_, contacts0_.cimdnm as cimdnm18_17_1_, contacts0_.cinm as cinm19_17_1_, contacts0_.cinknm as cinknm20_17_1_, contacts0_.cipob as cipob21_17_1_, contacts0_.cirlg as cirlg22_17_1_, contacts0_.cisltn as cisltn23_17_1_, contacts0_.cissdt as cissdt24_17_1_, contacts0_.cissn as cissn25_17_1_, contacts0_.citycd as citycd26_17_1_ from t0102 contacts0_ where contacts0_.cianum=?
Hibernate: select phonenumbe0_.cmanum as cmanum1_18_0_, phonenumbe0_.cmseq1 as cmseq2_18_0_, phonenumbe0_.cmseq2 as cmseq3_18_0_, phonenumbe0_.cmanum as cmanum1_18_1_, phonenumbe0_.cmseq1 as cmseq2_18_1_, phonenumbe0_.cmseq2 as cmseq3_18_1_, phonenumbe0_.cmcid as cmcid4_18_1_, phonenumbe0_.cmdtin as cmdtin5_18_1_, phonenumbe0_.cmtmin as cmtmin6_18_1_, phonenumbe0_.cmuid as cmuid7_18_1_, phonenumbe0_.cmdtlu as cmdtlu8_18_1_, phonenumbe0_.cmtmlu as cmtmlu9_18_1_, phonenumbe0_.cmuidm as cmuidm10_18_1_, phonenumbe0_.cmdtls as cmdtls11_18_1_, phonenumbe0_.cmphac as cmphac12_18_1_, phonenumbe0_.cmphcc as cmphcc13_18_1_, phonenumbe0_.cmdesb1 as cmdesb14_18_1_, phonenumbe0_.cmphno as cmphno15_18_1_, phonenumbe0_.cmphty as cmphty16_18_1_ from t0103 phonenumbe0_ where phonenumbe0_.cmanum=?
Hibernate: select bankaccoun0_.baanum as baanum1_20_0_, bankaccoun0_.babankac as babankac2_20_0_, bankaccoun0_.babankid as babankid3_20_0_, bankaccoun0_.baanum as baanum1_20_1_, bankaccoun0_.babankac as babankac2_20_1_, bankaccoun0_.babankid as babankid3_20_1_, bankaccoun0_.bacid as bacid4_20_1_, bankaccoun0_.badtin as badtin5_20_1_, bankaccoun0_.batmin as batmin6_20_1_, bankaccoun0_.bauid as bauid7_20_1_, bankaccoun0_.badtlu as badtlu8_20_1_, bankaccoun0_.batmlu as batmlu9_20_1_, bankaccoun0_.bauidm as bauidm10_20_1_, bankaccoun0_.badtls as badtls11_20_1_, bankaccoun0_.badesb1 as badesb12_20_1_ from t0105 bankaccoun0_ where bankaccoun0_.baanum=?
Hibernate: insert into t0104 (eacid, eadtin, eatmin, eauid, eadtlu, eatmlu, eauidm, eadtls, eaaddr1, eaaddr2, eaaddr3, eaaddr4, eacity, eacntry, eacnty, eaefdt, eaemail, eanau, eanou, eapoldis, eapscd, eastate, easubdis, eaanum, earecid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: update t0101 set adcid=?, addtlu=?, adtmlu=?, aduidm=?, adap=?, adar=?, adbuid=?, adcc01=?, adcc02=?, adcc03=?, adcc04=?, adcc05=?, adcc06=?, adcc07=?, adcc08=?, adcc09=?, adcc10=?, adempl=?, adtmlt=?, adlan=?, admlnm=?, adnm=?, adpan=?, adrecid=?, adrlid0=?, adrlid2=?, adrlid3=?, adrlid4=?, adrlid5=?, adrlid6=?, adrlid7=?, adrlid8=?, adrlid9=?, adrlid1=?, adst=?, adtaxid=? where adanum=?
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
2018-12-27 11:25:40.451  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@106e18d6, testMethod = updateTestWithPatch@AddressApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
2018-12-27 11:25:40.453  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@ce77d75, testMethod = deleteTest@AddressApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.454  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.454  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.459  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 5 ms
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select apsetting0_.pmanum as pmanum1_23_0_, apsetting0_.pmanum as pmanum1_23_1_, apsetting0_.pmcid as pmcid2_23_1_, apsetting0_.pmdtin as pmdtin3_23_1_, apsetting0_.pmtmin as pmtmin4_23_1_, apsetting0_.pmuid as pmuid5_23_1_, apsetting0_.pmdtlu as pmdtlu6_23_1_, apsetting0_.pmtmlu as pmtmlu7_23_1_, apsetting0_.pmuidm as pmuidm8_23_1_, apsetting0_.pmdtls as pmdtls9_23_1_, apsetting0_.pmapcls as pmapcls10_23_1_, apsetting0_.pmcrm as pmcrm11_23_1_, apsetting0_.pmcrct as pmcrct12_23_1_, apsetting0_.pmitc05 as pmitc13_23_1_, apsetting0_.pminsp as pminsp14_23_1_, apsetting0_.pmptc as pmptc15_23_1_, apsetting0_.pmspg as pmspg16_23_1_, apsetting0_.pmtaxau as pmtaxau17_23_1_, apsetting0_.pmtaxcd as pmtaxcd18_23_1_, apsetting0_.pmtaxid as pmtaxid19_23_1_ from t0401 apsetting0_ where apsetting0_.pmanum=?
Hibernate: select arsetting0_.rmanum as rmanum1_21_0_, arsetting0_.rmanum as rmanum1_21_1_, arsetting0_.rmcid as rmcid2_21_1_, arsetting0_.rmdtin as rmdtin3_21_1_, arsetting0_.rmtmin as rmtmin4_21_1_, arsetting0_.rmuid as rmuid5_21_1_, arsetting0_.rmdtlu as rmdtlu6_21_1_, arsetting0_.rmtmlu as rmtmlu7_21_1_, arsetting0_.rmuidm as rmuidm8_21_1_, arsetting0_.rmdtls as rmdtls9_21_1_, arsetting0_.rmaodt as rmaodt10_21_1_, arsetting0_.rmarcls as rmarcls11_21_1_, arsetting0_.rmbadt as rmbadt12_21_1_, arsetting0_.rmcrl as rmcrl13_21_1_, arsetting0_.rmcrm as rmcrm14_21_1_, arsetting0_.rmcrct as rmcrct15_21_1_, arsetting0_.rmcpg as rmcpg16_21_1_, arsetting0_.rmdesc1 as rmdesc17_21_1_, arsetting0_.rmexpdt as rmexpdt18_21_1_, arsetting0_.rminsp as rminsp19_21_1_, arsetting0_.rmptc as rmptc20_21_1_, arsetting0_.rmrcbad as rmrcbad21_21_1_, arsetting0_.rmrcbm as rmrcbm22_21_1_, arsetting0_.rmrcbs as rmrcbs23_21_1_, arsetting0_.rmslid as rmslid24_21_1_, arsetting0_.rmtaxcd as rmtaxcd25_21_1_, arsetting0_.rmtaxid as rmtaxid26_21_1_, arsetting0_.rmtdf as rmtdf27_21_1_ from t0301 arsetting0_ where arsetting0_.rmanum=?
Hibernate: select bankaccoun0_.baanum as baanum1_20_0_, bankaccoun0_.babankac as babankac2_20_0_, bankaccoun0_.babankid as babankid3_20_0_, bankaccoun0_.baanum as baanum1_20_1_, bankaccoun0_.babankac as babankac2_20_1_, bankaccoun0_.babankid as babankid3_20_1_, bankaccoun0_.bacid as bacid4_20_1_, bankaccoun0_.badtin as badtin5_20_1_, bankaccoun0_.batmin as batmin6_20_1_, bankaccoun0_.bauid as bauid7_20_1_, bankaccoun0_.badtlu as badtlu8_20_1_, bankaccoun0_.batmlu as batmlu9_20_1_, bankaccoun0_.bauidm as bauidm10_20_1_, bankaccoun0_.badtls as badtls11_20_1_, bankaccoun0_.badesb1 as badesb12_20_1_ from t0105 bankaccoun0_ where bankaccoun0_.baanum=?
Hibernate: select contacts0_.cianum as cianum1_17_0_, contacts0_.ciseq1 as ciseq2_17_0_, contacts0_.cianum as cianum1_17_1_, contacts0_.ciseq1 as ciseq2_17_1_, contacts0_.cicid as cicid3_17_1_, contacts0_.cidtin as cidtin4_17_1_, contacts0_.citmin as citmin5_17_1_, contacts0_.ciuid as ciuid6_17_1_, contacts0_.cidtlu as cidtlu7_17_1_, contacts0_.citmlu as citmlu8_17_1_, contacts0_.ciuidm as ciuidm9_17_1_, contacts0_.cidtls as cidtls10_17_1_, contacts0_.cidob as cidob11_17_1_, contacts0_.cidesb1 as cidesb12_17_1_, contacts0_.cifsnm as cifsnm13_17_1_, contacts0_.cigdr as cigdr14_17_1_, contacts0_.cilsnm as cilsnm15_17_1_, contacts0_.cimlnm as cimlnm16_17_1_, contacts0_.cimoref as cimoref17_17_1_, contacts0_.cimdnm as cimdnm18_17_1_, contacts0_.cinm as cinm19_17_1_, contacts0_.cinknm as cinknm20_17_1_, contacts0_.cipob as cipob21_17_1_, contacts0_.cirlg as cirlg22_17_1_, contacts0_.cisltn as cisltn23_17_1_, contacts0_.cissdt as cissdt24_17_1_, contacts0_.cissn as cissn25_17_1_, contacts0_.citycd as citycd26_17_1_ from t0102 contacts0_ where contacts0_.cianum=?
Hibernate: select phonenumbe0_.cmanum as cmanum1_18_0_, phonenumbe0_.cmseq1 as cmseq2_18_0_, phonenumbe0_.cmseq2 as cmseq3_18_0_, phonenumbe0_.cmanum as cmanum1_18_1_, phonenumbe0_.cmseq1 as cmseq2_18_1_, phonenumbe0_.cmseq2 as cmseq3_18_1_, phonenumbe0_.cmcid as cmcid4_18_1_, phonenumbe0_.cmdtin as cmdtin5_18_1_, phonenumbe0_.cmtmin as cmtmin6_18_1_, phonenumbe0_.cmuid as cmuid7_18_1_, phonenumbe0_.cmdtlu as cmdtlu8_18_1_, phonenumbe0_.cmtmlu as cmtmlu9_18_1_, phonenumbe0_.cmuidm as cmuidm10_18_1_, phonenumbe0_.cmdtls as cmdtls11_18_1_, phonenumbe0_.cmphac as cmphac12_18_1_, phonenumbe0_.cmphcc as cmphcc13_18_1_, phonenumbe0_.cmdesb1 as cmdesb14_18_1_, phonenumbe0_.cmphno as cmphno15_18_1_, phonenumbe0_.cmphty as cmphty16_18_1_ from t0103 phonenumbe0_ where phonenumbe0_.cmanum=?
2018-12-27 11:25:40.508  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@ce77d75, testMethod = deleteTest@AddressApiTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
2018-12-27 11:25:40.510  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@738e319, testMethod = updateTestWithPut@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.511  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.511  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.517  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 6 ms
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
2018-12-27 11:25:40.535  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@738e319, testMethod = updateTestWithPut@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
2018-12-27 11:25:40.536  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@4a35da1d, testMethod = getTestSingle@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.537  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.537  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.543  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 6 ms
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
2018-12-27 11:25:40.567  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@4a35da1d, testMethod = getTestSingle@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
2018-12-27 11:25:40.569  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@5ba52c0c, testMethod = getTestCollection@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.570  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.570  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.574  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 4 ms
Hibernate: select TOP(?) addressboo0_.adanum as adanum1_16_, addressboo0_.adcid as adcid2_16_, addressboo0_.addtin as addtin3_16_, addressboo0_.adtmin as adtmin4_16_, addressboo0_.aduid as aduid5_16_, addressboo0_.addtlu as addtlu6_16_, addressboo0_.adtmlu as adtmlu7_16_, addressboo0_.aduidm as aduidm8_16_, addressboo0_.adap as adap9_16_, addressboo0_.adar as adar10_16_, addressboo0_.adbuid as adbuid11_16_, addressboo0_.adcc01 as adcc12_16_, addressboo0_.adcc02 as adcc13_16_, addressboo0_.adcc03 as adcc14_16_, addressboo0_.adcc04 as adcc15_16_, addressboo0_.adcc05 as adcc16_16_, addressboo0_.adcc06 as adcc17_16_, addressboo0_.adcc07 as adcc18_16_, addressboo0_.adcc08 as adcc19_16_, addressboo0_.adcc09 as adcc20_16_, addressboo0_.adcc10 as adcc21_16_, addressboo0_.adempl as adempl22_16_, addressboo0_.adtmlt as adtmlt23_16_, addressboo0_.adlan as adlan24_16_, addressboo0_.admlnm as admlnm25_16_, addressboo0_.adnm as adnm26_16_, addressboo0_.adpan as adpan27_16_, addressboo0_.adrecid as adrecid28_16_, addressboo0_.adrlid0 as adrlid29_16_, addressboo0_.adrlid2 as adrlid30_16_, addressboo0_.adrlid3 as adrlid31_16_, addressboo0_.adrlid4 as adrlid32_16_, addressboo0_.adrlid5 as adrlid33_16_, addressboo0_.adrlid6 as adrlid34_16_, addressboo0_.adrlid7 as adrlid35_16_, addressboo0_.adrlid8 as adrlid36_16_, addressboo0_.adrlid9 as adrlid37_16_, addressboo0_.adrlid1 as adrlid38_16_, addressboo0_.adst as adst39_16_, addressboo0_.adtaxid as adtaxid40_16_ from t0101 addressboo0_
Hibernate: select count(addressboo0_.adanum) as col_0_0_ from t0101 addressboo0_
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/addresses/
       Parameters = {}
          Headers = {Accept=[application/json]}
             Body = <no character encoding set>
    Session Attrs = {org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.CSRF_TOKEN=org.springframework.security.web.csrf.DefaultCsrfToken@6fb7042c, SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@475fcd89: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@475fcd89: Principal: org.springframework.security.core.userdetails.User@f02988d6: Username: username; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Not granted any authorities; Credentials: [PROTECTED]; Authenticated: true; Details: null; Not granted any authorities}

Handler:
             Type = org.springframework.data.rest.webmvc.RepositoryEntityController
           Method = public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8], X-Content-Type-Options=[nosniff], X-XSS-Protection=[1; mode=block], Cache-Control=[no-cache, no-store, max-age=0, must-revalidate], Pragma=[no-cache], Expires=[0], X-Frame-Options=[DENY]}
     Content type = application/json;charset=UTF-8
             Body = {
  "_embedded" : {
    "addresses" : [ {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "0000",
      "searchType" : "O",
      "longAddressNumber" : "AMTEK",
      "name" : "AMTEK",
      "mailingName" : "AMTEK",
      "parentAddressNumber" : "0000",
      "taxId" : "",
      "accountPayable" : true,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "0000",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/0000"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/0000"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/0000/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/0000/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/0000/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/0000/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/0000/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/0000/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/0000/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "AYOOKLIK",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "0100",
      "searchType" : "O",
      "longAddressNumber" : "AIRMAS",
      "name" : "PT. AIRMAS PERKASA",
      "mailingName" : "PT. AIRMAS PERKASA",
      "parentAddressNumber" : "0100",
      "taxId" : "",
      "accountPayable" : true,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "",
        "lastSynchronizedDate" : null,
        "addressNumber" : "0100",
        "recordId" : "20171031",
        "effectiveDate" : "2018-01-15",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2018-01-15T20:44:23",
        "inputDateTime" : "2018-01-15T20:44:23"
      },
      "lastUpdateDateTime" : "2018-01-15T20:44:23",
      "inputDateTime" : "2018-01-15T20:44:23",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/0100"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/0100"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/0100/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/0100/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/0100/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/0100/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/0100/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/0100/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/0100/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1000",
      "searchType" : "C",
      "longAddressNumber" : "1000",
      "name" : "1000",
      "mailingName" : "1000",
      "parentAddressNumber" : "1000",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1000",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1000"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1000"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1000/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1000/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1000/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1000/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1000/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1000/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1000/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1001",
      "searchType" : "C",
      "longAddressNumber" : "@ Mobile.com",
      "name" : "@ Mobile.com",
      "mailingName" : "@ Mobile.com",
      "parentAddressNumber" : "1001",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1001",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Hitech Mall Lt.Dasar E-6",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1001"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1001"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1001/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1001/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1001/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1001/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1001/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1001/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1001/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1002",
      "searchType" : "C",
      "longAddressNumber" : "4 Ever",
      "name" : "4 Ever",
      "mailingName" : "4 Ever",
      "parentAddressNumber" : "1002",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1002",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Hitech Mall Lt.Dasar E-44",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1002"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1002"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1002/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1002/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1002/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1002/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1002/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1002/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1002/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1003",
      "searchType" : "C",
      "longAddressNumber" : "99 IT Store",
      "name" : "99 IT Store",
      "mailingName" : "99 IT Store",
      "parentAddressNumber" : "1003",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1003",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Hitech Mall Lantai Dasar BlokE-19",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1003"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1003"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1003/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1003/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1003/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1003/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1003/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1003/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1003/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1004",
      "searchType" : "C",
      "longAddressNumber" : "A Plus",
      "name" : "A Plus",
      "mailingName" : "A Plus",
      "parentAddressNumber" : "1004",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1004",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1004"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1004"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1004/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1004/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1004/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1004/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1004/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1004/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1004/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1005",
      "searchType" : "C",
      "longAddressNumber" : "A.I.M",
      "name" : "A.I.M",
      "mailingName" : "A.I.M",
      "parentAddressNumber" : "1005",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1005",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1005"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1005"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1005/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1005/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1005/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1005/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1005/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1005/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1005/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1006",
      "searchType" : "C",
      "longAddressNumber" : "Aan",
      "name" : "Aan",
      "mailingName" : "Aan",
      "parentAddressNumber" : "1006",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1006",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1006"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1006"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1006/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1006/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1006/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1006/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1006/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1006/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1006/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1007",
      "searchType" : "C",
      "longAddressNumber" : "Abadi Cipta Komputer",
      "name" : "Abadi Cipta Komputer",
      "mailingName" : "Abadi Cipta Komputer",
      "parentAddressNumber" : "1007",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1007",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Manyar Rejo 17 Surabaya",
        "address2" : "",
        "address3" : "Surabaya",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1007"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1007"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1007/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1007/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1007/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1007/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1007/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1007/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1007/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1008",
      "searchType" : "C",
      "longAddressNumber" : "Abastia",
      "name" : "Abastia",
      "mailingName" : "Abastia",
      "parentAddressNumber" : "1008",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1008",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Rungkut Madya No.149",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1008"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1008"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1008/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1008/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1008/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1008/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1008/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1008/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1008/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1009",
      "searchType" : "C",
      "longAddressNumber" : "ABD",
      "name" : "ABD",
      "mailingName" : "ABD",
      "parentAddressNumber" : "1009",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1009",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1009"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1009"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1009/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1009/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1009/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1009/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1009/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1009/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1009/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1010",
      "searchType" : "C",
      "longAddressNumber" : "Abdul",
      "name" : "Abdul",
      "mailingName" : "Abdul",
      "parentAddressNumber" : "1010",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1010",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Mojosari Loceret ",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1010"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1010"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1010/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1010/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1010/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1010/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1010/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1010/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1010/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1011",
      "searchType" : "C",
      "longAddressNumber" : "Abdul Bari",
      "name" : "Abdul Bari",
      "mailingName" : "Abdul Bari",
      "parentAddressNumber" : "1011",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1011",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Bangkalan",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1011"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1011"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1011/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1011/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1011/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1011/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1011/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1011/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1011/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1012",
      "searchType" : "C",
      "longAddressNumber" : "Abdul Syukur",
      "name" : "Abdul Syukur",
      "mailingName" : "Abdul Syukur",
      "parentAddressNumber" : "1012",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1012",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "",
        "address2" : "",
        "address3" : "",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1012"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1012"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1012/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1012/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1012/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1012/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1012/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1012/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1012/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1013",
      "searchType" : "C",
      "longAddressNumber" : "Abe",
      "name" : "Abe",
      "mailingName" : "Abe",
      "parentAddressNumber" : "1013",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1013",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Semolowaru Tengah III/22",
        "address2" : "",
        "address3" : "Surabaya",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1013"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1013"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1013/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1013/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1013/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1013/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1013/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1013/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1013/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1014",
      "searchType" : "C",
      "longAddressNumber" : "Abi Comp",
      "name" : "Abi Comp",
      "mailingName" : "Abi Comp",
      "parentAddressNumber" : "1014",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1014",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Plemahan 5 No.12",
        "address2" : "",
        "address3" : "Surabaya",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1014"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1014"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1014/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1014/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1014/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1014/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1014/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1014/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1014/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1015",
      "searchType" : "C",
      "longAddressNumber" : "Absolute",
      "name" : "Absolute",
      "mailingName" : "Absolute",
      "parentAddressNumber" : "1015",
      "taxId" : "",
      "accountPayable" : true,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1015",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Hitech Mall Lt.Dasar Blok E 26-27",
        "address2" : "",
        "address3" : "Surabaya ",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1015"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1015"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1015/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1015/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1015/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1015/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1015/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1015/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1015/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1016",
      "searchType" : "C",
      "longAddressNumber" : "Absolutely",
      "name" : "Absolutely",
      "mailingName" : "Absolutely",
      "parentAddressNumber" : "1016",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1016",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Hitech Mall Lt.Dasar Blok B-06",
        "address2" : "",
        "address3" : "Surabaya ",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1016"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1016"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1016/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1016/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1016/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1016/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1016/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1016/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1016/apSetting"
        }
      }
    }, {
      "inputUserId" : "QSA",
      "lastUpdateUserId" : "QSA",
      "computerId" : "GLSVR171217",
      "lastSynchronizedDate" : null,
      "lastTransactionDate" : null,
      "addressNumber" : "1017",
      "searchType" : "C",
      "longAddressNumber" : "1017",
      "name" : "Abu Yasmin (Yasmin Komputer)",
      "mailingName" : "Abu Yasmin (Yasmin Komputer)",
      "parentAddressNumber" : "1017",
      "taxId" : "",
      "accountPayable" : false,
      "accountReceivable" : true,
      "employee" : false,
      "businessUnitId" : "110",
      "recordId" : "20171031",
      "relatedAddresses" : {
        "salesperson" : "",
        "relatedAddress2" : "",
        "relatedAddress3" : "",
        "relatedAddress4" : "",
        "relatedAddress5" : "",
        "relatedAddress6" : "",
        "relatedAddress7" : "",
        "relatedAddress8" : "",
        "relatedAddress9" : "",
        "relatedAddress0" : ""
      },
      "categories" : {
        "categoryCode01" : "",
        "categoryCode02" : "",
        "categoryCode03" : "",
        "categoryCode04" : "",
        "categoryCode05" : "",
        "categoryCode06" : "",
        "categoryCode07" : "",
        "categoryCode08" : "",
        "categoryCode09" : "",
        "categoryCode10" : ""
      },
      "currentAddress" : {
        "inputUserId" : "QSA",
        "lastUpdateUserId" : "QSA",
        "computerId" : "GLSVR171217",
        "lastSynchronizedDate" : null,
        "addressNumber" : "1017",
        "recordId" : "20171031",
        "effectiveDate" : "2017-10-31",
        "address1" : "Jl.A.Yani No.2B Pemalang ",
        "address2" : "",
        "address3" : "Jawa Tengah",
        "address4" : "",
        "email" : "",
        "country" : "",
        "state" : "",
        "county" : "",
        "city" : "",
        "postalCode" : "",
        "neighborhoodOrganizationUnit" : "",
        "neigborhoodAdministrationUnit" : "",
        "politicalDistrict" : "",
        "subDistrict" : "",
        "lastUpdateDateTime" : "2017-12-17T00:00:00",
        "inputDateTime" : "2017-12-17T00:00:00"
      },
      "lastUpdateDateTime" : "2017-12-17T00:00:00",
      "inputDateTime" : "2017-12-17T00:00:00",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/addresses/1017"
        },
        "addressBookMaster" : {
          "href" : "http://localhost/api/addresses/1017"
        },
        "parent" : {
          "href" : "http://localhost/api/addresses/1017/parent"
        },
        "contacts" : {
          "href" : "http://localhost/api/addresses/1017/contacts"
        },
        "phoneNumbers" : {
          "href" : "http://localhost/api/addresses/1017/phoneNumbers"
        },
        "bankAccounts" : {
          "href" : "http://localhost/api/addresses/1017/bankAccounts"
        },
        "arSetting" : {
          "href" : "http://localhost/api/addresses/1017/arSetting"
        },
        "businessUnit" : {
          "href" : "http://localhost/api/addresses/1017/businessUnit"
        },
        "apSetting" : {
          "href" : "http://localhost/api/addresses/1017/apSetting"
        }
      }
    } ]
  },
  "_links" : {
    "first" : {
      "href" : "http://localhost/api/addresses?page=0&size=20"
    },
    "self" : {
      "href" : "http://localhost/api/addresses{?page,size,sort}",
      "templated" : true
    },
    "next" : {
      "href" : "http://localhost/api/addresses?page=1&size=20"
    },
    "last" : {
      "href" : "http://localhost/api/addresses?page=107&size=20"
    },
    "profile" : {
      "href" : "http://localhost/api/profile/addresses"
    }
  },
  "page" : {
    "size" : 20,
    "totalElements" : 2144,
    "totalPages" : 108,
    "number" : 0
  }
}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2018-12-27 11:25:40.750  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@5ba52c0c, testMethod = getTestCollection@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
2018-12-27 11:25:40.753  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@7a25e23f, testMethod = createTestWithPut@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.753  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.753  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.759  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 6 ms
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
2018-12-27 11:25:40.775  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@7a25e23f, testMethod = createTestWithPut@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
2018-12-27 11:25:40.777  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@67d5554a, testMethod = createTestWithPost@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75de8c12]; rollback [true]
2018-12-27 11:25:40.778  INFO 2120 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2018-12-27 11:25:40.778  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2018-12-27 11:25:40.783  INFO 2120 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 5 ms
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select contactper0_.cianum as cianum1_17_0_, contactper0_.ciseq1 as ciseq2_17_0_, contactper0_.cicid as cicid3_17_0_, contactper0_.cidtin as cidtin4_17_0_, contactper0_.citmin as citmin5_17_0_, contactper0_.ciuid as ciuid6_17_0_, contactper0_.cidtlu as cidtlu7_17_0_, contactper0_.citmlu as citmlu8_17_0_, contactper0_.ciuidm as ciuidm9_17_0_, contactper0_.cidtls as cidtls10_17_0_, contactper0_.cidob as cidob11_17_0_, contactper0_.cidesb1 as cidesb12_17_0_, contactper0_.cifsnm as cifsnm13_17_0_, contactper0_.cigdr as cigdr14_17_0_, contactper0_.cilsnm as cilsnm15_17_0_, contactper0_.cimlnm as cimlnm16_17_0_, contactper0_.cimoref as cimoref17_17_0_, contactper0_.cimdnm as cimdnm18_17_0_, contactper0_.cinm as cinm19_17_0_, contactper0_.cinknm as cinknm20_17_0_, contactper0_.cipob as cipob21_17_0_, contactper0_.cirlg as cirlg22_17_0_, contactper0_.cisltn as cisltn23_17_0_, contactper0_.cissdt as cissdt24_17_0_, contactper0_.cissn as cissn25_17_0_, contactper0_.citycd as citycd26_17_0_ from t0102 contactper0_ where contactper0_.cianum=? and contactper0_.ciseq1=?
Hibernate: insert into t0101 (adcid, addtin, adtmin, aduid, addtlu, adtmlu, aduidm, adap, adar, adbuid, adcc01, adcc02, adcc03, adcc04, adcc05, adcc06, adcc07, adcc08, adcc09, adcc10, adempl, adtmlt, adlan, admlnm, adnm, adpan, adrecid, adrlid0, adrlid2, adrlid3, adrlid4, adrlid5, adrlid6, adrlid7, adrlid8, adrlid9, adrlid1, adst, adtaxid, adanum) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into t0104 (eacid, eadtin, eatmin, eauid, eadtlu, eatmlu, eauidm, eadtls, eaaddr1, eaaddr2, eaaddr3, eaaddr4, eacity, eacntry, eacnty, eaefdt, eaemail, eanau, eanou, eapoldis, eapscd, eastate, easubdis, eaanum, earecid) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into t0102 (cicid, cidtin, citmin, ciuid, cidtlu, citmlu, ciuidm, cidtls, cidob, cidesb1, cifsnm, cigdr, cilsnm, cimlnm, cimoref, cimdnm, cinm, cinknm, cipob, cirlg, cisltn, cissdt, cissn, citycd, cianum, ciseq1) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select addressboo0_.adanum as adanum1_16_0_, addressboo0_.adcid as adcid2_16_0_, addressboo0_.addtin as addtin3_16_0_, addressboo0_.adtmin as adtmin4_16_0_, addressboo0_.aduid as aduid5_16_0_, addressboo0_.addtlu as addtlu6_16_0_, addressboo0_.adtmlu as adtmlu7_16_0_, addressboo0_.aduidm as aduidm8_16_0_, addressboo0_.adap as adap9_16_0_, addressboo0_.adar as adar10_16_0_, addressboo0_.adbuid as adbuid11_16_0_, addressboo0_.adcc01 as adcc12_16_0_, addressboo0_.adcc02 as adcc13_16_0_, addressboo0_.adcc03 as adcc14_16_0_, addressboo0_.adcc04 as adcc15_16_0_, addressboo0_.adcc05 as adcc16_16_0_, addressboo0_.adcc06 as adcc17_16_0_, addressboo0_.adcc07 as adcc18_16_0_, addressboo0_.adcc08 as adcc19_16_0_, addressboo0_.adcc09 as adcc20_16_0_, addressboo0_.adcc10 as adcc21_16_0_, addressboo0_.adempl as adempl22_16_0_, addressboo0_.adtmlt as adtmlt23_16_0_, addressboo0_.adlan as adlan24_16_0_, addressboo0_.admlnm as admlnm25_16_0_, addressboo0_.adnm as adnm26_16_0_, addressboo0_.adpan as adpan27_16_0_, addressboo0_.adrecid as adrecid28_16_0_, addressboo0_.adrlid0 as adrlid29_16_0_, addressboo0_.adrlid2 as adrlid30_16_0_, addressboo0_.adrlid3 as adrlid31_16_0_, addressboo0_.adrlid4 as adrlid32_16_0_, addressboo0_.adrlid5 as adrlid33_16_0_, addressboo0_.adrlid6 as adrlid34_16_0_, addressboo0_.adrlid7 as adrlid35_16_0_, addressboo0_.adrlid8 as adrlid36_16_0_, addressboo0_.adrlid9 as adrlid37_16_0_, addressboo0_.adrlid1 as adrlid38_16_0_, addressboo0_.adst as adst39_16_0_, addressboo0_.adtaxid as adtaxid40_16_0_ from t0101 addressboo0_ where addressboo0_.adanum=?
Hibernate: select addresshis0_.eaanum as eaanum1_19_0_, addresshis0_.earecid as earecid2_19_0_, addresshis0_.eaanum as eaanum1_19_1_, addresshis0_.earecid as earecid2_19_1_, addresshis0_.eacid as eacid3_19_1_, addresshis0_.eadtin as eadtin4_19_1_, addresshis0_.eatmin as eatmin5_19_1_, addresshis0_.eauid as eauid6_19_1_, addresshis0_.eadtlu as eadtlu7_19_1_, addresshis0_.eatmlu as eatmlu8_19_1_, addresshis0_.eauidm as eauidm9_19_1_, addresshis0_.eadtls as eadtls10_19_1_, addresshis0_.eaaddr1 as eaaddr11_19_1_, addresshis0_.eaaddr2 as eaaddr12_19_1_, addresshis0_.eaaddr3 as eaaddr13_19_1_, addresshis0_.eaaddr4 as eaaddr14_19_1_, addresshis0_.eacity as eacity15_19_1_, addresshis0_.eacntry as eacntry16_19_1_, addresshis0_.eacnty as eacnty17_19_1_, addresshis0_.eaefdt as eaefdt18_19_1_, addresshis0_.eaemail as eaemail19_19_1_, addresshis0_.eanau as eanau20_19_1_, addresshis0_.eanou as eanou21_19_1_, addresshis0_.eapoldis as eapoldi22_19_1_, addresshis0_.eapscd as eapscd23_19_1_, addresshis0_.eastate as eastate24_19_1_, addresshis0_.easubdis as easubdi25_19_1_ from t0104 addresshis0_ where addresshis0_.eaanum=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/addresses/ABCD
       Parameters = {}
          Headers = {Accept=[application/json]}
             Body = <no character encoding set>
    Session Attrs = {org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.CSRF_TOKEN=org.springframework.security.web.csrf.DefaultCsrfToken@20c40bde, SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@475fcd89: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@475fcd89: Principal: org.springframework.security.core.userdetails.User@f02988d6: Username: username; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Not granted any authorities; Credentials: [PROTECTED]; Authenticated: true; Details: null; Not granted any authorities}

Handler:
             Type = org.springframework.data.rest.webmvc.RepositoryEntityController
           Method = public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8], X-Content-Type-Options=[nosniff], X-XSS-Protection=[1; mode=block], Cache-Control=[no-cache, no-store, max-age=0, must-revalidate], Pragma=[no-cache], Expires=[0], X-Frame-Options=[DENY]}
     Content type = application/json;charset=UTF-8
             Body = {
  "inputUserId" : "username",
  "lastUpdateUserId" : "username",
  "computerId" : "username",
  "lastSynchronizedDate" : null,
  "lastTransactionDate" : null,
  "addressNumber" : "ABCD",
  "searchType" : "I",
  "longAddressNumber" : "ABCDEFGH",
  "name" : "Abcd",
  "mailingName" : "",
  "parentAddressNumber" : "ABCD",
  "taxId" : "",
  "accountPayable" : true,
  "accountReceivable" : false,
  "employee" : false,
  "businessUnitId" : "110",
  "recordId" : "20181227",
  "relatedAddresses" : {
    "salesperson" : "1010",
    "relatedAddress2" : "1000",
    "relatedAddress3" : "",
    "relatedAddress4" : "",
    "relatedAddress5" : "",
    "relatedAddress6" : "",
    "relatedAddress7" : "",
    "relatedAddress8" : "",
    "relatedAddress9" : "",
    "relatedAddress0" : ""
  },
  "categories" : {
    "categoryCode01" : "AO",
    "categoryCode02" : "",
    "categoryCode03" : "",
    "categoryCode04" : "",
    "categoryCode05" : "",
    "categoryCode06" : "",
    "categoryCode07" : "",
    "categoryCode08" : "",
    "categoryCode09" : "",
    "categoryCode10" : ""
  },
  "currentAddress" : {
    "inputUserId" : "username",
    "lastUpdateUserId" : "username",
    "computerId" : "username",
    "lastSynchronizedDate" : null,
    "addressNumber" : "ABCD",
    "recordId" : "20181227",
    "effectiveDate" : "2018-12-27",
    "address1" : "Jalan Test no 3",
    "address2" : "Ruko Testes",
    "address3" : "",
    "address4" : "",
    "email" : "",
    "country" : "ID",
    "state" : "",
    "county" : "",
    "city" : "",
    "postalCode" : "",
    "neighborhoodOrganizationUnit" : "",
    "neigborhoodAdministrationUnit" : "",
    "politicalDistrict" : "",
    "subDistrict" : "",
    "lastUpdateDateTime" : "2018-12-27T11:25:40",
    "inputDateTime" : "2018-12-27T11:25:40"
  },
  "lastUpdateDateTime" : "2018-12-27T11:25:40",
  "inputDateTime" : "2018-12-27T11:25:40",
  "_links" : {
    "self" : {
      "href" : "http://localhost/api/addresses/ABCD"
    },
    "addressBookMaster" : {
      "href" : "http://localhost/api/addresses/ABCD"
    },
    "parent" : {
      "href" : "http://localhost/api/addresses/ABCD/parent"
    },
    "contacts" : {
      "href" : "http://localhost/api/addresses/ABCD/contacts"
    },
    "phoneNumbers" : {
      "href" : "http://localhost/api/addresses/ABCD/phoneNumbers"
    },
    "bankAccounts" : {
      "href" : "http://localhost/api/addresses/ABCD/bankAccounts"
    },
    "arSetting" : {
      "href" : "http://localhost/api/addresses/ABCD/arSetting"
    },
    "businessUnit" : {
      "href" : "http://localhost/api/addresses/ABCD/businessUnit"
    },
    "apSetting" : {
      "href" : "http://localhost/api/addresses/ABCD/apSetting"
    }
  }
}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select contacts0_.cianum as cianum1_17_0_, contacts0_.ciseq1 as ciseq2_17_0_, contacts0_.cianum as cianum1_17_1_, contacts0_.ciseq1 as ciseq2_17_1_, contacts0_.cicid as cicid3_17_1_, contacts0_.cidtin as cidtin4_17_1_, contacts0_.citmin as citmin5_17_1_, contacts0_.ciuid as ciuid6_17_1_, contacts0_.cidtlu as cidtlu7_17_1_, contacts0_.citmlu as citmlu8_17_1_, contacts0_.ciuidm as ciuidm9_17_1_, contacts0_.cidtls as cidtls10_17_1_, contacts0_.cidob as cidob11_17_1_, contacts0_.cidesb1 as cidesb12_17_1_, contacts0_.cifsnm as cifsnm13_17_1_, contacts0_.cigdr as cigdr14_17_1_, contacts0_.cilsnm as cilsnm15_17_1_, contacts0_.cimlnm as cimlnm16_17_1_, contacts0_.cimoref as cimoref17_17_1_, contacts0_.cimdnm as cimdnm18_17_1_, contacts0_.cinm as cinm19_17_1_, contacts0_.cinknm as cinknm20_17_1_, contacts0_.cipob as cipob21_17_1_, contacts0_.cirlg as cirlg22_17_1_, contacts0_.cisltn as cisltn23_17_1_, contacts0_.cissdt as cissdt24_17_1_, contacts0_.cissn as cissn25_17_1_, contacts0_.citycd as citycd26_17_1_ from t0102 contacts0_ where contacts0_.cianum=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/addresses/ABCD/contacts
       Parameters = {}
          Headers = {Accept=[application/json]}
             Body = <no character encoding set>
    Session Attrs = {org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.CSRF_TOKEN=org.springframework.security.web.csrf.DefaultCsrfToken@ae230fc, SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@475fcd89: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@475fcd89: Principal: org.springframework.security.core.userdetails.User@f02988d6: Username: username; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Not granted any authorities; Credentials: [PROTECTED]; Authenticated: true; Details: null; Not granted any authorities}

Handler:
             Type = org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController
           Method = public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8], X-Content-Type-Options=[nosniff], X-XSS-Protection=[1; mode=block], Cache-Control=[no-cache, no-store, max-age=0, must-revalidate], Pragma=[no-cache], Expires=[0], X-Frame-Options=[DENY]}
     Content type = application/json;charset=UTF-8
             Body = {
  "_embedded" : {
    "contacts" : [ {
      "inputUserId" : "username",
      "lastUpdateUserId" : "username",
      "computerId" : "username",
      "lastSynchronizedDate" : null,
      "addressNumber" : "ABCD",
      "sequence" : 0,
      "name" : "Abcd",
      "mailingName" : "",
      "description" : "",
      "firstName" : "",
      "middleName" : "",
      "lastName" : "",
      "nickname" : "",
      "salutation" : "",
      "gender" : "",
      "type" : "C",
      "religion" : "",
      "dateOfBirth" : null,
      "placeOfBirth" : "",
      "socialSecurityNumber" : "",
      "socialSecurityDate" : null,
      "mediaObjectReference" : "",
      "lastUpdateDateTime" : "2018-12-27T11:25:40",
      "inputDateTime" : "2018-12-27T11:25:40",
      "_links" : {
        "self" : {
          "href" : "http://localhost/api/contacts/ABCD_0"
        },
        "contactPerson" : {
          "href" : "http://localhost/api/contacts/ABCD_0"
        },
        "master" : {
          "href" : "http://localhost/api/contacts/ABCD_0/master"
        }
      }
    } ]
  },
  "_links" : {
    "self" : {
      "href" : "http://localhost/api/addresses/ABCD/contacts"
    }
  }
}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2018-12-27 11:25:40.915  INFO 2120 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@7ea0381f testClass = AddressApiTest, testInstance = ags.goldenlionerp.apiTests.addresses.AddressApiTest@67d5554a, testMethod = createTestWithPost@ApiTestBase, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6dee78a6 testClass = AddressApiTest, locations = '{}', classes = '{class ags.goldenlionerp.GoldenLionErpApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@636d731e, [ImportsContextCustomizer@6290ffca key = [ags.goldenlionerp.apiTests.ApiTestBase$TestConfig]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6afa5291, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20cebcb4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@49a32273], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
